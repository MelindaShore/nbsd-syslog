SYSLOG.CONF(5)            NetBSD File Formats Manual            SYSLOG.CONF(5)

NNAAMMEE
     ssyysslloogg..ccoonnff -- syslogd(8) configuration file

DDEESSCCRRIIPPTTIIOONN
     The ssyysslloogg..ccoonnff file is the configuration file for the syslogd(8) pro-
     gram.  It consists of blocks of lines separated by _p_r_o_g_r_a_m and _h_o_s_t_n_a_m_e
     specifications, with each line containing two fields: the _s_e_l_e_c_t_o_r field
     which specifies the types of messages and priorities to which the line
     applies, and an _a_c_t_i_o_n field which specifies the action to be taken if a
     message syslogd(8) receives matches the selection criteria.  The _s_e_l_e_c_t_o_r
     field is separated from the _a_c_t_i_o_n field by one or more tab characters.

     The _S_e_l_e_c_t_o_r_s function are encoded as a _f_a_c_i_l_i_t_y, a period (`.'), an
     optional set of comparison flags ([!] [<=>]), and a _l_e_v_e_l, with no inter-
     vening white-space.  Both the _f_a_c_i_l_i_t_y and the _l_e_v_e_l are case insensi-
     tive.

     The _f_a_c_i_l_i_t_y describes the part of the system generating the message, and
     is one of the following keywords: auth, authpriv, cron, ftp, daemon,
     kern, lpr, mail, mark, news, syslog, user, uucp and local0 through
     local7.  These keywords (with the exception of mark) correspond to the
     similar ``LOG_'' values specified to the openlog(3) and syslog(3) library
     routines.

     The _c_o_m_p_a_r_i_s_o_n _f_l_a_g_s may be used to specify exactly what levels are
     logged.  If unspecified, the default comparison is `>=' (greater than or
     equal to), or, if the --UU option is passed to syslogd(8), `=' (equal to).
     Comparison flags beginning with `!' will have their logical sense
     inverted.  Thus, `!=info' means all levels except info and `!notice' has
     the same meaning as `<notice'.

     The _l_e_v_e_l describes the severity of the message, and is a keyword from
     the following ordered list (higher to lower): emerg, alert, crit, err,
     warning, notice, info and debug.  These keywords correspond to the simi-
     lar (LOG_) values specified to the syslog(3) library routine.

     Each block of lines is separated from the previous block by a _p_r_o_g_r_a_m or
     _h_o_s_t_n_a_m_e specification.  A block will only log messages corresponding to
     the most recent _p_r_o_g_r_a_m and _h_o_s_t_n_a_m_e specifications given.  Consider the
     case of a block that selects `pppd' as the _p_r_o_g_r_a_m, directly followed by
     a block that selects messages from the _h_o_s_t_n_a_m_e `dialhost'.  The second
     block will log only messages from the pppd(8) program from the host
     `dialhost'.

     A _p_r_o_g_r_a_m specification of the form `#!+prog1,prog2' or `!+prog1,prog2'
     will cause subsequent blocks to be applied to messages logged by the
     specified programs.  A _p_r_o_g_r_a_m specification of the form `#!-prog1,prog2'
     or `!-prog1,prog2' will cause subsequent blocks to be applied to messages
     logged by programs other than the ones specified.  A _p_r_o_g_r_a_m specifica-
     tion of the form `#!prog1,prog2' or `!prog1,prog2' is equivalent to
     `!+prog1,prog2'.  Program selectors may also match kernel-generated mes-
     sages.  For example, a program specification of `!+subsys' will match
     kernel-generated messages of the form `subsys: here is a message'.  The
     special specification `!*' will cause subsequent blocks to apply to all
     programs.

     A _h_o_s_t_n_a_m_e specification of the form `#+host1,host2' or `+host1,host2'
     will cause subsequent blocks to be applied to messages received from the
     specified hosts.  A _h_o_s_t_n_a_m_e specification of the form `#-host1,host2' or
     `-host1,host2' will cause subsequent blocks to be applied to messages
     from hosts other than the ones specified.  If the hostname is given as
     `@', the local hostname will be used.  The special specification `+*'
     will cause subsequent blocks to apply to all hosts.

     See syslog(3) for a further descriptions of both the _f_a_c_i_l_i_t_y and _l_e_v_e_l
     keywords and their significance.  It is preferred that selections be made
     based on _f_a_c_i_l_i_t_y rather than _p_r_o_g_r_a_m, since the latter can vary in a
     networked environment.  However, there are cases where a _f_a_c_i_l_i_t_y may be
     too broadly defined.

     If a received message matches the specified _f_a_c_i_l_i_t_y, and the specified
     _l_e_v_e_l comparison is true, and the first word in the message after the
     date matches the _p_r_o_g_r_a_m, the action specified in the _a_c_t_i_o_n field will
     be taken.

     Multiple _s_e_l_e_c_t_o_r_s may be specified for a single _a_c_t_i_o_n by separating
     them with semicolon (`;') characters.  It is important to note, however,
     that each _s_e_l_e_c_t_o_r can modify the ones preceding it.

     Multiple _f_a_c_i_l_i_t_i_e_s may be specified for a single _l_e_v_e_l by separating
     them with comma (`,') characters.

     An asterisk (`*') can be used to specify all _f_a_c_i_l_i_t_i_e_s or all _l_e_v_e_l_s.

     The special _f_a_c_i_l_i_t_y ``mark'' receives a message at priority ``info''
     every 20 minutes (see syslogd(8)).  This is not enabled by a _f_a_c_i_l_i_t_y
     field containing an asterisk.

     The special _l_e_v_e_l ``none'' disables a particular _f_a_c_i_l_i_t_y.

     The _a_c_t_i_o_n field of each line specifies the action to be taken when the
     _s_e_l_e_c_t_o_r field selects a message.  There are five forms:

     ++oo   A pathname (beginning with a leading slash).  Selected messages are
         appended to the file.

         To ensure that kernel messages are written to disk promptly,
         syslogd(8) calls fsync(2) after writing messages from the kernel.
         Other messages are not synced explcitly.  You may disable syncing of
         files specified to receive kernel messages by prefixing the pathname
         with a minus sign `-'.  Note that use of this option may cause the
         loss of log information in the event of a system crash immediately
         following the write attempt.  However, using this option may prove to
         be useful if your system's kernel is logging many messages.

         Normally the priority and version is not written to file. In order to
         use syslog-sign you may prefix a pathname with the plus sign `+'.  If
         both switches are used the order has to be `+-'.

     ++oo   A hostname (preceded by an at (`@') sign).  Selected messages are
         forwarded to the syslogd(8) program on the named host with UDP.

     ++oo   A hostname preceded by an at (`@') Sign and enclosed in brackets
         (`[]') Selected messages are forwarded with TLS to the syslogd(8)
         program on the named host. After the closing bracket a colon (`'):
         And a port or service name may be appended. Additional options are
         configured in parantheses in the form of key="value".  Recognized
         keywords are _s_u_b_j_e_c_t, _f_i_n_g_e_r_p_r_i_n_t, _c_e_r_t, _a_n_d _v_e_r_i_f_y.

     ++oo   A comma separated list of users.  Selected messages are written to
         those users if they are logged in.

     ++oo   An asterisk.  Selected messages are written to all logged-in users.

     ++oo   A vertical bar (`|') followed by a command to which to pipe the
         selected messages.  The command string is passed to _/_b_i_n_/_s_h for eval-
         uation, so the usual shell metacharacters or input/output redirection
         can occur.  (Note that redirecting stdio(3) buffered output from the
         invoked command can cause additional delays, or even lost output data
         in case a logging subprocess exits with a signal.)  The command
         itself runs with _s_t_d_o_u_t and _s_t_d_e_r_r redirected to _/_d_e_v_/_n_u_l_l.  Upon
         receipt of a SIGHUP, syslogd(8) will close the pipe to the process.
         If the process does not exit voluntarily, it will be sent a SIGTERM
         signal after a grace period of up to 60 seconds.

         The command will only be started once data arrives that should be
         piped to it.  If the command exits, it will be restarted as neces-
         sary.

         If it is desired that the subprocess should receive exactly one line
         of input, this can be achieved by exiting after reading and process-
         ing the single line.  A wrapper script can be used to achieve this
         effect, if necessary.  Note that this method can be very resource-
         intensive if many log messages are being piped through the filter.

         Unless the command is a full pipeline, it may be useful to start the
         command with _e_x_e_c so that the invoking shell process does not wait
         for the command to complete.  Note that the command is started with
         the UID of the syslogd(8) process, normally the superuser.

         Just like with files a plus sign `+' will leave the priority and ver-
         sion information intact.

     Blank lines and lines whose first non-blank character is a hash (`#')
     character are ignored.

TTLLSS OOPPTTIIOONNSS
     Some additional options are necessary to use TLS connections in
     syslogd(8).  These are:

     _t_l_s___s_e_r_v_e_r
     Enables TLS server mode.

     _t_l_s___b_i_n_d_p_o_r_t
     Service name or port number to bind to. Default is `syslog', but as long
     as no official port is assigned this has to be configured.

     _t_l_s___b_i_n_d_h_o_s_t
     Hostname or IP to bind to.

     _t_l_s___r_e_c_o_n_n_e_c_t___i_n_t_e_r_v_a_l
     Initial reconnect timer in seconds; default is 10 sec.  If the reconnect
     fails an exponential backoff will increase the interval.

     _t_l_s___r_e_c_o_n_n_e_c_t___t_i_m_e_o_u_t
     The maximum reconnect interval in seconds.; default is one day.  If a
     reconnect timer reaches this value then the connection is considered per-
     manently unavailable and no more reconnections are tried.

     _t_l_s___g_e_n___c_e_r_t
     Automatically generate a private key and certificate.

     _t_l_s___k_e_y
     File with private key. Default is `/etc/openssl/default.key'

     _t_l_s___c_e_r_t
     File with certificate to use. Default is `/etc/openssl/default.crt'

     _t_l_s___c_a
     File with CA certificate to use.

     _t_l_s___c_a_d_i_r
     Directory containing CA certificates.

     _t_l_s___v_e_r_i_f_y
     If set to `off' then certificate authentication is skipped.

     _t_l_s___a_l_l_o_w___f_i_n_g_e_r_p_r_i_n_t_s
     List of fingerprints of trusted client certificates.

     _t_l_s___a_l_l_o_w___c_l_i_e_n_t_c_e_r_t_s
     List of filenames with trusted client certificates.

BBUUFFFFEERRIINNGG
     syslogd(8) is able to buffer temporary not writeable messages in memory.
     To limit the memory consumed for this buffering the following optons may
     be given:

     _f_i_l_e___q_u_e_u_e___l_e_n_g_t_h

     _p_i_p_e___q_u_e_u_e___l_e_n_g_t_h

     _t_l_s___q_u_e_u_e___l_e_n_g_t_h
     The maximum number of messages buffered for one destination of type tls,
     file, or pipe respectively. Defaults are `1024', `1024, and' `-1' (no
     limit).

     _f_i_l_e___q_u_e_u_e___s_i_z_e

     _p_i_p_e___q_u_e_u_e___s_i_z_e

     _t_l_s___q_u_e_u_e___s_i_z_e
     The maximum memory usage in bytes of messages buffered for one destina-
     tion.  Defaults are `1M' `1M' `16M'.

SSIIGGNNIINNGG
     syslogd(8) is able to digitally sign all processed messages.

     _s_i_g_n___s_g Enables signing. Set this option to enable syslog-sign and select
             how to assign messages to signature groups. Four possible options
             are:

             _0       Use one global signature group for all messages.

             _1       Use one signature group per priority.

             _2       Use signature groups for ranges of priorities.

             _3       Use one signature group per destination. This is a custom
                     strategy not defined by the standard. With this setting
                     one signature group is set up for every file and network
                     action.

     _s_i_g_n___d_e_l_i_m___s_g_2 This Option is only evaluated with `sign_sg=2' and allows
             to configure the priority ranges for signature groups. The param-
             eters are numerical values used as the maximum priority for one
             group.  The default is to use one signature groups per facility,
             which is equal to setting `sign_delim_sg2=7 15 23 31 39 ...'.

FFIILLEESS
     /etc/syslog.conf  The syslogd(8) configuration file.

EEXXAAMMPPLLEESS
     A configuration file might appear as follows:

     # Log all kernel messages, authentication messages of
     # level notice or higher and anything of level err or
     # higher to the console.
     # Don't log private authentication messages!
     *.err;kern.*;auth.notice;authpriv.none  /dev/console

     # Log anything (except mail) of level info or higher.
     # Don't log private authentication messages!
     *.info;mail.none;authpriv.none          /var/log/messages

     # Log daemon messages at debug level only
     daemon.=debug                           /var/log/daemon.debug

     # The authpriv file has restricted access.
     # Write logs with priority for later verification with syslog-sign.
     authpriv.*                              +/var/log/secure

     # Log all the mail messages in one place.
     mail.*                                  /var/log/maillog

     # Everybody gets emergency messages, plus log them on another
     # machine.
     *.emerg                                 *
     *.emerg                                 @arpa.berkeley.edu

     # Log all messages of level info or higher to another
     # machine using TLS with an alternative portname and a
     # fingerprint for athentication
     *.info                                  @[logserver]:1234(fingerprint="SHA1:01:02:...")

     # Root and Eric get alert and higher messages.
     *.alert                                 root,eric

     # Save mail and news errors of level err and higher in a
     # special file.
     mail,news.err                           /var/log/spoolerr

     # Pipe all authentication messages to a filter.
     auth.*                                  |exec /usr/local/sbin/authfilter

     # Log kernel messages to a separate file without syncing each message.
     kern.*                                  -/var/log/kernlog

     # Save ftpd transactions along with mail and news.
     !ftpd
     *.*                                     /var/log/spoolerr

     # Send all error messages from a RAID array through a filter.
     !raid0
     kern.err                                |exec /usr/local/sbin/raidfilter

     # Save pppd messages from dialhost to a separate file.
     !pppd
     +dialhost
     *.*                                     /var/log/dialhost-pppd

     # Save non-local log messages from all programs to a separate file.
     !*
     -@
     *.*                                     /var/log/foreign

     # Generate digital signatures for all messages
     # to each file or network destination.
     sign_sg=3

SSEEEE AALLSSOO
     syslog(3), syslogd(8)

HHIISSTTOORRYY
     The ssyysslloogg..ccoonnff file appeared in 4.3BSD, along with syslogd(8).

BBUUGGSS
     The effects of multiple selectors are sometimes not intuitive.  For exam-
     ple ``mail.crit;*.err'' will select ``mail'' facility messages at the
     level of ``err'' or higher, not at the level of ``crit'' or higher.

NetBSD 4.0                     November 18, 2004                    NetBSD 4.0
